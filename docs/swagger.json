{
    "swagger": "2.0",
    "info": {
        "description": "This is a swagger docs for Hexagonal API.",
        "title": "Hexagonal API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/login": {
            "post": {
                "description": "Login user by either of email or phone and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login User JSON",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.loginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.JWTToken"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            }
        },
        "/send-otp": {
            "post": {
                "description": "Sends OTP to the number if its registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Request OTP",
                "parameters": [
                    {
                        "description": "Request OTP JSON",
                        "name": "sendOTP",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.requestOtp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.OTP"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Registers a new user in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.registerUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves the user from DB based on ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search user by ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            }
        },
        "/verify-otp": {
            "post": {
                "description": "Verify the given OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verify OTP JSON",
                        "name": "verifyOTP",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.verifyOtp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.JWTToken"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.JWTToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "domain.OTP": {
            "type": "object",
            "properties": {
                "otp": {
                    "description": "Actual OTP value.",
                    "type": "string"
                },
                "otp_hash": {
                    "description": "Hashed OTP value.",
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_encrypted": {
                    "type": "string"
                },
                "email_hash": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "is_phone_number_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "phone_number_encrypted": {
                    "type": "string"
                },
                "phone_number_hash": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_role": {
                    "$ref": "#/definitions/domain.UserRole"
                }
            }
        },
        "domain.UserRole": {
            "type": "string",
            "enum": [
                "ADM",
                "RID",
                "CUS"
            ],
            "x-enum-varnames": [
                "Admin",
                "Rider",
                "Customer"
            ]
        },
        "http.ValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "http.loginUser": {
            "type": "object",
            "required": [
                "password"
            ],
            "oneOf":{
                "required": ["email"],
                "required": ["phone_number"]
            },
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone_number": {
                    "type": "string",
                    "minLength": 10,
                    "example": "9876543210"
                }
            }
        },
        "http.registerUser": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "phone_number"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Qwerty"
                },
                "last_name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "A"
                },
                "phone_number": {
                    "type": "string",
                    "minLength": 10,
                    "example": "9876543210"
                }
            }
        },
        "http.requestOtp": {
            "type": "object",
            "required": [
                "phone_number"
            ],
            "properties": {
                "phone_number": {
                    "type": "string",
                    "minLength": 10,
                    "example": "9876543210"
                }
            }
        },
        "http.response": {
            "type": "object",
            "properties": {
                "data": {},
                "descriptive_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.ValidationError"
                    }
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "http.verifyOtp": {
            "type": "object",
            "required": [
                "otp",
                "otp_hash",
                "phone_number"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "otp_hash": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "example": "9876543210"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}